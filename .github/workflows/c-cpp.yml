# source:
# https://github.com/ptheywood/cuda-cmake-github-actions/blob/master/.github/workflows/Ubuntu.yml
#
name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      # explicit include-based build matrix, of known valid options
      matrix:
        include:
          # 20.04 supports CUDA 11.0+
          - os: ubuntu-20.04
            cuda: "11.2"
            gcc: 9
          # - os: ubuntu-20.04
          #   cuda: "11.2"
          #   gcc: 10
          # 18.04 supports CUDA 10.1+ (gxx <= 8)
          # - os: ubuntu-18.04
          #   cuda: "11.0"
          #   gcc: 8
          # - os: ubuntu-18.04
          #   cuda: "10.2"
          #   gcc: 8
          # - os: ubuntu-18.04
          #   cuda: "10.1"
          #   gcc: 8

    env:
      build_dir: "build"
      config: "Release"

    steps:
      - uses: actions/checkout@v2

      - name: Install CUDA
        env:
          cuda: ${{ matrix.cuda }}
        run: ./.github/scripts/install_cuda_ubuntu.sh
        shell: bash

      # Specify the correct host compilers
      - name: Install/Select gcc and g++
        run: |
          sudo apt-get install -y gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
          echo "CC=/usr/bin/gcc-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "CXX=/usr/bin/g++-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "CUDAHOSTCXX=/usr/bin/g++-${{ matrix.gcc }}" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: simple_cudf_dev
          environment-file: conda/envs/simple-cudf.yml

      - name: activate conda
        run: conda activate simple_cudf_dev

      - name: Print env variables
        run: conda --version && which python && echo "conda prefix $CONDA_PREFIX, conda $CONDA" && which nvcc

      - name: Build cpp project
        run: ./build.sh
